
I had to change line 1136:
$verb_without_anubandha=scrape($first,0,2,1)[0];
to     
$temp = scrape($first,0,2,1);$verb_without_anubandha=$temp[0];
In order to avoid a php 'parse error'.  Probably due to minor difference in my PHP version from yours.

----------------------------------------

All these changes done in Emacs:
1. Remove duplicate <head> line 
2. In every line matching 'echo.* (<sutra-ref>),
  change all ' (<sutra-ref>)' to ' (".link_sutra("<sutra-ref>").")'
   (some lines have more than one sutra-ref)
2a. link_sutra is a function which will returns a string <a href=....>..</a>
3. It is good practice to insert new-lines (\n) at the end of echo statements.
   That way, the html file generated can be examined with a text-editor.  If
   there are no line breaks in the html, then text-editors have a hard time with
   the file.  The browser displays ignore line breaks, so  line-breaks don't change
   the way the display looks.
   With that in mind
  Change every 
   </p>" to </p>\n"

 (\([0-9]+[.][0-9]+[.][0-9]+\))

(".link_sutra("\1").")

In Emacs:
Replace regexp:
echo\(.*?\) (\([0-9]+[.][0-9]+[.][0-9]+\)) -> echo\1 (".link_sutra("\2")."))
  1012
Do again  (where two sutras)
    47
Do again  (where three sutras)
    15
Do again: There is 1 line with 8 sutra references
So, repeat the replacement until all in this line are changed

Now add those line-breaks.
In Emacs:
Replace regexp:
</p>" -> </p>\\n"
Replace regexp:
 <hr>" -> <hr>\\n"
Replace '</p.>' with </p>\n    (the period is an html error) (7 times)

Now insert the link_sutra function somewhere, say after </head>:  (this could be put in functions.php)
</head>
<?php
function link_sutra($s) {
 /* $s is a string of form X.Y.Z where X,Y,Z are digits
   Returns a string   
   <a href="http://sanskritdocuments.org/learning_tools/ashtadhyayi/vyakhya/X/X.Y.Z.htm">X.Y.Z</a>
  e.g., if s = "3.4.113", returns
   <a href="http://sanskritdocuments.org/learning_tools/ashtadhyayi/vyakhya/3/3.4.113.htm">3.4.113</a>
 */
 $parts = preg_split('/[.]/',$s);
 if (count($parts) != 3) {  // error checking
  echo "<p>link_sutra error: input = $s</p>\n";
  exit(1);
 }
 $X=$parts[0];
 $Y=$parts[1];
 $Z=$parts[2];
 $ans = "<a href=\"http://sanskritdocuments.org/learning_tools/ashtadhyayi/vyakhya/$X/$X.$Y.$Z.htm\">$X.$Y.$Z</a>";
 return $ans;
}
?>

-----------------------------------------------------------
This is a weird note.
When I ran tiGanta.html using your original program (with just the one change mentioned above to fix parse-error),
and using the parameters you mentioned, Here is the url which was generated. Note
in particular the parameter 'verbset=none'.
orig: in -orig
http://127.0.0.1:4001/SanskritVerb-master-orig/tiGanta.php?first=eDa!&upasarga=&lakAra=law&vAcya=kartR&tran=SLP1&sanAdi=&cond11=2&verbset=none&step=11

When I ran tiGanta.html with the adjusted tiGanta.php, Here is the url which was generated:

http://127.0.0.1:4001/SanskritVerb-master/tiGanta.php?first=eDa!&upasarga=&lakAra=law&vAcya=kartR&tran=SLP1&sanAdi=&cond11=2&step=11
NOTE IT IS MISSING the verbset=none parameter.  
What this has to do with there being a difference in tiGanta.php I have no idea.  Very weird.

When I skip the tiGanta.html step and run (the adjusted) tiGanta.php directly with the same parameters as 
original case (namely verbset=none), The output looks identical to the original, except that it
has the added links.

http://127.0.0.1:4001/SanskritVerb-master/tiGanta.php?first=eDa!&upasarga=&lakAra=law&vAcya=kartR&tran=SLP1&sanAdi=&cond11=2&verbset=none&step=11


